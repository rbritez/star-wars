<!DOCTYPE html>
<html>
<head>
    <title>API Consumption Example</title>
</head>
<body>
    
    <div id="tableContainer">
        <h1>Personajes de Star Wars</h1>
        <table id="myTable" class="display">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Birth Year</th>
                    <th>Gender</th>
                    <th>Height-Mass</th>
                    <th>Eye Color</th>
                    <th>Skin Color</th>
                    <th>Created</th>
                </tr>
            </thead>
        </table>
    </div>

    <!-- bibliotecas DataTables y jQuery -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.11.5/datatables.min.css"/>
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.11.5/datatables.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css"/>



    <script>
        const url_api = {{ configFromSymfony | json_encode | raw }};
        const table = $('#myTable');
        const tableContainer = $('#tableContainer');

        $(document).ready(function() {
            // Inicializa DataTables con opciones b√°sicas
            table.DataTable({
                processing: true,
                serverSide: false,
                ajax: {
                    url: url_api + '/api/v1/people',
                    type: 'GET',
                    dataSrc: 'data'
                },
                columns: [
                    { 
                        data: 'name',
                        render: function (data, type, row) {
                            return data || 'sin datos';
                        }
                    },
                    { 
                        data: 'birth_year',
                        render: function (data, type, row) {
                            let returnYear = (data == 'unknown') ? '#' : data;
                            return returnYear;
                        }
                    },
                    { 
                        data: 'gender',
                        render: function (data, type, row) {
                            return data.toUpperCase();
                        }
                    },
                    { 
                        data: 'mass',
                        render: function (data, type, row) {
                            console.log(data, row);
                            let dataMassa = (data == 'unknown') ? '#' : data;
                            let dataHeight = (row.height == 'unknown') ? '#' : row.height;
                            return dataHeight+'-'+dataMassa;
                        }
                    },
                    { 
                        data: 'eye_color',
                        render: function (data, type, row) {
                            return data;
                        }
                    },
                    { 
                        data: 'skin_color',
                        render: function (data, type, row) {
                            let returnSkin = (data == 'unknown') ? '#' : data;
                            return returnSkin;
                        }
                    },
                    { 
                        data: 'created',
                        render: function (data, type, row) {
                            return data;
                        }
                    },
                ]
            });
            tableContainer.css({
                'max-width': '80%',
                'margin': 'auto',
                'display': 'flex',
                'flexDirection': 'column',
                'alignItems': 'center'
            });
        });
    </script>
</body>
</html>
